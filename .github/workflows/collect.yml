name: 'Collect Data'

on:
  # schedule:
  #   - cron: '*/20 * * * *'
  workflow_dispatch:
    inputs:
      start_index:
        description: Index to start scraping from (index is line no of post-ids.csv). Will continue scraping from previous merged artifact if left empty.
        default: ''

jobs:
  collect:
    if: always()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        offset: [0, 1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v2
      - name: Get start_index
        id: get-start-index
        run: |
          start_index="${{ github.event.inputs.start_index }}"
          if [ -z "$start_index" ]
          then
            last_index=$(curl -s --url 'https://api.github.com/repos/davidchoo12/nuswhispers-analysis/actions/artifacts' | jq -r "[.artifacts[] | select(.name | contains(\"data-0-\"))][0].name" | sed -r "s/data-[0-9]+-([0-9]+).*/\1/g")
            start_index=$(( last_index + 1 ))
          fi
          echo "::set-output name=start_index::$start_index"
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
        working-directory: ./scraper
      - name: Save IP address
        run: mkdir scraper/ips && touch scraper/ips/${{ matrix.offset }}-$(curl -fsSL https://httpbin.org/ip | grep -oE '[0-9].+[0-9]')
      - name: Scrape post ids
        run: python post-id-scraper.py
        working-directory: ./scraper
      - name: Scrape!
        run: python converter.py -s ${{ steps.get-start-index.outputs.start_index }} -p ${{ matrix.offset }}
        working-directory: ./scraper
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: data
          path: ./scraper/data/data-*-*.csv
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ips
          path: ./scraper/ips/*
  fillgaps:
    needs: collect
    if: always()
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        index: [0, 1]
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: data
          path: ./scraper/data
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
        working-directory: ./scraper
      - name: Run merger
        run: python merger.py
        working-directory: ./scraper
      - name: Move merged file to data artifact
        run: mv scraper/data-*.csv scraper/data/
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: data
          path: ./scraper/data/data-*-*.csv
  merge:
    needs: fillgaps
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # adapted from https://github.com/actions/download-artifact/issues/3#issuecomment-580658517
      - name: Download artifact from prev run
        if: ${{ github.event.inputs.start_index == '' }}
        run: |
          download_url=$(curl -s --url 'https://api.github.com/repos/davidchoo12/nuswhispers-analysis/actions/artifacts' | jq -r "[.artifacts[] | select(.name | contains(\"data-0-\"))][0].archive_download_url")
          echo 'download url:' $download_url
          curl -s -L -o data-merged.zip -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' $download_url
          ls -lah
          unzip data-merged.zip -d ./scraper/data/
          ls -lah ./scraper/data/
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: data
          path: ./scraper/data
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
        working-directory: ./scraper
      - name: Run merger
        run: python merger.py
        working-directory: ./scraper
      - name: Get merged file name
        id: print-name
        run: |
          cd scraper
          ls data-*.csv
          echo "::set-output name=merged-file-name::$(ls data-*.csv)"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.print-name.outputs.merged-file-name }}
          path: ./scraper/data-*.csv
      # - name: Set current date as env variable
      #   id: date
      #   run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     release_name: ${{ steps.date.outputs.today }}
      #     tag_name: ${{ github.run_number }}-1
      # - name: Upload Release Asset - post-ids.csv
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./scraper/post-ids.csv
      #     asset_name: post-ids.csv
      #     asset_content_type: text/csv
      # - name: Upload Release Asset - logs-post-id-scraper.txt
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./scraper/logs-post-id-scraper.txt
      #     asset_name: logs-post-id-scraper.txt
      #     asset_content_type: text/plain
      # - name: Upload Release Asset - data.csv
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./scraper/data-converted.csv
      #     asset_name: data-converted.csv
      #     asset_content_type: text/csv
      # - name: Upload Release Asset - logs.txt
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./scraper/logs2.txt
      #     asset_name: logs2.txt
      #     asset_content_type: text/plain
  # collect2:
  #   needs: collect1
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-2
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect3:
  #   needs: collect2
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-3
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect4:
  #   needs: collect3
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-4
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect5:
  #   needs: collect4
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-5
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect6:
  #   needs: collect5
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-6
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect7:
  #   needs: collect6
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-7
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect8:
  #   needs: collect7
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-8
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain
  # collect9:
  #   needs: collect8
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements.txt
  #       working-directory: ./scraper
  #     - name: Scrape post ids
  #       run: python post-id-scraper.py
  #       working-directory: ./scraper
  #     - name: Scrape!
  #       env:
  #         FB_EMAIL: ${{ secrets.fb_email }}
  #         FB_PASS: ${{ secrets.fb_pass }}
  #       run: python converter.py
  #       working-directory: ./scraper
  #     - name: Set current date as env variable
  #       id: date
  #       run: echo ::set-output name=today::$(date +'%Y-%m-%dT%H:%M:%SZ')
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         release_name: ${{ steps.date.outputs.today }}
  #         tag_name: ${{ github.run_number }}-9
  #     - name: Upload Release Asset - post-ids.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/post-ids.csv
  #         asset_name: post-ids.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs-post-id-scraper.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs-post-id-scraper.txt
  #         asset_name: logs-post-id-scraper.txt
  #         asset_content_type: text/plain
  #     - name: Upload Release Asset - data.csv
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/data-converted.csv
  #         asset_name: data-converted.csv
  #         asset_content_type: text/csv
  #     - name: Upload Release Asset - logs.txt
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./scraper/logs2.txt
  #         asset_name: logs2.txt
  #         asset_content_type: text/plain